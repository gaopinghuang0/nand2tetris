// bootstrap code
@256
D=A
@SP
M=D
@Global.Bootstrap.ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Global.Bootstrap.ret.1)
// function Sys.init 0
(Sys.init)
@0
D=A
// call Sys.main 0
@Sys.init.ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.init.ret.1)
// pop temp 1
@SP
M=M-1
@SP
A=M
D=M
@R6
M=D
// label LOOP
(LOOP)
// goto LOOP
@LOOP
0;JMP
// function Sys.main 0
(Sys.main)
@0
D=A
// push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Sys.add12 1
@Sys.main.ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.main.ret.1)
// pop temp 0
@SP
M=M-1
@SP
A=M
D=M
@R5
M=D
// push constant 246
@246
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R6
M=D
@R6
D=M
@5
A=D-A
D=M
@R7
M=D
@ARG
D=M
@0
D=D+A
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R6
D=M
@1
A=D-A
D=M
@THAT
M=D
@R6
D=M
@2
A=D-A
D=M
@THIS
M=D
@R6
D=M
@3
A=D-A
D=M
@ARG
M=D
@R6
D=M
@4
A=D-A
D=M
@LCL
M=D
@R7
A=M
0;JMP
// function Sys.add12 3
(Sys.add12)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// return
@LCL
D=M
@R6
M=D
@R6
D=M
@5
A=D-A
D=M
@R7
M=D
@ARG
D=M
@0
D=D+A
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R6
D=M
@1
A=D-A
D=M
@THAT
M=D
@R6
D=M
@2
A=D-A
D=M
@THIS
M=D
@R6
D=M
@3
A=D-A
D=M
@ARG
M=D
@R6
D=M
@4
A=D-A
D=M
@LCL
M=D
@R7
A=M
0;JMP
